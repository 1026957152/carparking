/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.3/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'

// Apply the application plugin to add support for building an application
apply plugin: 'application'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    maven{ url 'https://repo.eclipse.org/content/repositories/paho-releases'}
    maven{ url 'http://oss.sonatype.org/content/repositories/snapshots'}


//Sonatype OSS Snapshot Repository


}
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.7.RELEASE")
        classpath 'org.hidetake:gradle-ssh-plugin:1.1.4'
    }
}
apply plugin: 'org.springframework.boot'
apply plugin: 'org.hidetake.ssh'


configurations.all {
    exclude module: 'slf4j-log4j12'
    exclude module: 'slf4j-jdk14'
    //  exclude module: 'log4j-over-slf4j'
}

dependencies {

    //  compile("org.springframework.boot:spring-boot-starter-web")
    testCompile("org.springframework.boot:spring-boot-starter-test")



    // providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")

    compile("org.springframework.boot:spring-boot-starter-jetty")
    // end::jetty[]
    // tag::actuator[]
    compile("org.springframework.boot:spring-boot-starter-actuator")
    // end::actuator[]
    testCompile("junit:junit")




    compile("org.springframework.boot:spring-boot-starter-freemarker")



    compile("org.springframework.boot:spring-boot-starter-websocket") {
        exclude module: "spring-boot-starter-tomcat"
    }

/*    compile('org.springframework.boot:spring-boot-starter-hateoas') {
        exclude module: "spring-boot-starter-tomcat"
    }*/
/*

    compile("org.springframework.boot:spring-boot-starter-jetty"){
        exclude module: "servlet-api"

    }
*/





    compile("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-tomcat"
        exclude module: "commons-logging"
        exclude module: "jackson-databind"
        exclude module: "servlet-api"
        exclude module: "tomcat-embed-websocket"
    }


    compile('com.alibaba:fastjson:1.2.8')
    compile("org.springframework.boot:spring-boot-starter-data-jpa") {
        exclude module: "tomcat-juli"
    }

    compile('com.cloudhopper.proxool:proxool:0.9.1')
/*    compile('com.cloudhopper.proxool:proxool:0.9.1') {
        exclude module: "servlet-api"
        exclude module: "log4j"
        exclude module: "commons-logging"

        exclude module: "servletapi"
    }*/

    compile group: 'org.springframework.boot', name: 'spring-boot-starter-activemq', version: '1.5.4.RELEASE'
    compile("org.apache.activemq:activemq-broker")

    compile("org.apache.commons:commons-lang3:3.3.2")
    compile('org.apache.httpcomponents:httpclient:4.3.6')
    compile("mysql:mysql-connector-java:5.1.34")


    compile("io.projectreactor:reactor-bus:2.0.8.RELEASE")
/*
    provided "org.springframework.boot:spring-boot-starter-tomcat"
*/
    compile('org.springframework.boot:spring-boot-starter-hateoas:1.4.2.RELEASE') {
        exclude module: "spring-boot-starter-tomcat"
    }


    //以下的两个要配合使用 啊，
    compile('org.springframework.security:spring-security-taglibs:4.0.1.RELEASE')

/*   compile('org.springframework.security:spring-security-web:4.1.0.RELEASE'){
        exclude module: "servlet-api"

    }*/
 //   compile('javax.servlet.jsp:jsp-api:2.1')

   // compile ('org.springframework.cloud:spring-cloud-starter-eureka-server:1.3.4.RELEASE')


    compile group: 'org.eclipse.paho', name: 'org.eclipse.paho.client.mqttv3', version: '1.2.0'
    compile files('lib/jna-3.0.9.jar')
    // The production code uses Guava
    //compile 'com.google.guava:guava:20.0'

    // Use JUnit test framework
    testCompile 'junit:junit:4.12'
    compile group: 'com.sun.jna', name: 'jna', version: '3.0.9'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter'


    compile("org.springframework.boot:spring-boot-starter-web") {
       exclude module: "spring-boot-starter-tomcat"
        exclude module: "commons-logging"

        exclude module: "tomcat-embed-websocket"
    }

    compile group: 'org.eclipse.paho', name: 'org.eclipse.paho.client.mqttv3', version: '1.2.0'
    compile ('org.springframework.retry:spring-retry:1.1.5.RELEASE')
    compile ('org.bytedeco:javacv-platform:1.3')

    compile group: 'org.aspectj', name: 'aspectjrt', version: '1.8.10'

    compile ("com.google.zxing:core:3.3.0")
    compile ('com.google.zxing:javase:3.3.0')

    compile ('com.github.sarxos:webcam-capture:0.3.12-SNAPSHOT')
    compile ('com.github.sarxos:webcam-capture-driver-ipcam:0.3.10-SNAPSHOT')


    compile("io.projectreactor:reactor-core")
    compile("io.projectreactor:reactor-net")
    compile("io.netty:netty-all:4.1.5.Final")

 //   compile files('lib/jna.jar')
    //compile fileTree(dir: 'lib', include: ['*.jar'])
}
springBoot {
    providedConfiguration = "provided"
}
// Define the main class for the application
mainClassName = 'com.Application'

configurations {
    compile.exclude module: "spring-boot-starter-tomcat"

}

distributions {
    main {
        contents {
            into('conf') {
                from { 'src/main/resources' }
            }
        }
        contents {
            into('bin') {
                from { 'src/main/sdk/' }
            }
        }
    }
}


/*
task copy {

        into('build/classes/main/bin') {
            from  'src/main/sdk'
        }

}
*/

jar {
    manifest {
        attributes 'Main-Class': 'com.Application'
    }
    from {
        (configurations.runtime).collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
}

task copyDocs(type: Copy) {
    from 'src/main/sdk'
    into 'build/classes/main/'

}




/*
关键
configurations {
    compile.exclude module: "spring-boot-starter-tomcat"

}*/
