package com.coalvalue.python.plate;

import com.coalvalue.configuration.ReactorEventConfig;
import com.coalvalue.domain.entity.Equipment;
import com.coalvalue.domain.entity.InstanceTransport;
import com.coalvalue.domain.entity.PlateRecognition;
import com.coalvalue.domain.entity.ReportDeliveryOrder;
import com.coalvalue.enumType.EquipmentTypeEnum;
import com.coalvalue.enumType.PlateDirectionEnum;
import com.coalvalue.notification.NotificationData_loadometer;
import com.coalvalue.repository.PlateRecognitionRepository;
import com.coalvalue.service.DeliveryOrderService;
import com.coalvalue.service.EquipmentService;
import com.coalvalue.service.InstanceTransportService;
import com.google.gson.JsonIOException;
import com.google.gson.JsonObject;
import com.google.gson.JsonParser;
import com.google.gson.JsonSyntaxException;
import org.springframework.beans.factory.annotation.Autowired;
import reactor.bus.Event;
import reactor.bus.EventBus;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.transaction.Transactional;
import java.io.*;
import java.util.Base64;

/**
 * Servlet implementation class PlateServlet /devicemanagement/php/plateresult.php
 * /devicemanagement/php/receivedeviceinfo.php
 */
@WebServlet("/plateServlet/register") //description = "a enter for wechat", urlPatterns = { "/aaa"},loadOnStartup=1

public class PlateServletReigster extends HttpServlet {
    private static final long serialVersionUID = 1L;


    @Autowired
    PlateRecognitionRepository plateRecognitionRepository;

    @Autowired
    DeliveryOrderService deliveryOrderService;


    @Autowired
    InstanceTransportService instanceTransportService;



    @Autowired
    EventBus eventBus;
    @Autowired
    EquipmentService equipmentService;


    /**
     * @see HttpServlet#HttpServlet()
     */
    public PlateServletReigster() {
        super();
        // TODO Auto-generated constructor stub
    }

    /**
     * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
     */
    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        // TODO Auto-generated method stub
        // response.getWriter().append("Served at: ").append(request.getContextPath());

        // 回复命令，控制设备开闸
        response.setContentType("text/json");
        PrintWriter out = response.getWriter();
        out.println("{\"Response_AlarmInfoPlate\":{\"info\":\"ok\",\"content\":\"...\",\"is_pay\":\"true\"}}");
        out.flush();
        out.close();
    }

    public static String deCode(String str) {
        try {
            byte[] b = str.getBytes("gbk");//编码
            String sa = new String(b, "utf-8");//解码:用什么字符集编码就用什么字符集解码

            return sa;
        } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
            return "";
        }
    }

    private static boolean SaveFile(byte[] content, String path, String imgName) {
        FileOutputStream writer = null;
        boolean result = false;
        try {
            File dir = new File(path);
            if (!dir.exists()) {
                dir.mkdirs();
            }
            writer = new FileOutputStream(new File(path, imgName));
            writer.write(content);
            result = true;
        } catch (IOException ex) {
            ex.printStackTrace();
        } finally {
            try {
                writer.flush();
                writer.close();
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }
        return result;
    }

    /**
     * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
     */
    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        // TODO Auto-generated method stub
        System.out.println("{\"Response_AlarmInfoPlate\":{\"info\":\"ok\",\"content\":\"...\",\"is_pay\":\"true\"}}");

        StringBuffer jb = new StringBuffer();
        // JSONObject jsonObject;
        String line = null;
        try {
            BufferedReader reader = request.getReader();
            while ((line = reader.readLine()) != null)
                jb.append(line);
        } catch (Exception e) { /*report an error*/ }

        System.out.println("------------+++++++++++++++++++"+jb.toString());
        // 把接收到车牌结果保存到txt文件中
        WriteTxt("d:\\plate_result.txt", jb.toString());



        doGet(request, response);
    }



    protected void WriteTxt( String path, String txt )
    {
        try
        {
            FileWriter  f = new FileWriter(path);
            BufferedWriter bw=new BufferedWriter(f);
            bw.write(txt);
            bw.close();
        }
        catch(Exception e)
        {
        }
    }

    public static String deCode_new_GB2312(byte[] str) {
        try {
            String stirng = new String(str, "GB2312");
            return java.net.URLDecoder.decode(stirng, "GB2312");
        } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
            return "";
        }
    }

}
