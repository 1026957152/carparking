# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import test_pb2 as test__pb2


class GreeterStub(object):
    """https://www.jianshu.com/p/39c9eedba2c2
    ����˽ӿ���
    """

    def __init__(self, channel):
        """Constructor.

        Args:
          channel: A grpc.Channel.
        """
        self.SayHello = channel.unary_unary(
            '/grpc.Greeter/SayHello',
            request_serializer=test__pb2.HelloRequest.SerializeToString,
            response_deserializer=test__pb2.HelloReply.FromString,
            )
        self.RecordRoute = channel.stream_unary(
            '/grpc.Greeter/RecordRoute',
            request_serializer=test__pb2.HelloRequest.SerializeToString,
            response_deserializer=test__pb2.RouteSummary.FromString,
            )
        self.RecordRoute_Point = channel.stream_unary(
            '/grpc.Greeter/RecordRoute_Point',
            request_serializer=test__pb2.Point.SerializeToString,
            response_deserializer=test__pb2.RouteSummary.FromString,
            )
        self.ListFeatures = channel.unary_stream(
            '/grpc.Greeter/ListFeatures',
            request_serializer=test__pb2.Rectangle.SerializeToString,
            response_deserializer=test__pb2.Feature.FromString,
            )
        self.RouteChat = channel.stream_stream(
            '/grpc.Greeter/RouteChat',
            request_serializer=test__pb2.RouteNote.SerializeToString,
            response_deserializer=test__pb2.RouteNote.FromString,
            )
        self.Subscribe = channel.stream_stream(
            '/grpc.Greeter/Subscribe',
            request_serializer=test__pb2.Topic.SerializeToString,
            response_deserializer=test__pb2.Notification.FromString,
            )


class GreeterServicer(object):
    """https://www.jianshu.com/p/39c9eedba2c2
    ����˽ӿ���
    """

    def SayHello(self, request, context):
        """����˽ӿڷ���
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RecordRoute(self, request_iterator, context):
        """һ�� �ͻ�����ʽ RPC �� �ͻ���д��һ����Ϣ���в����䷢�͵���������ͬ��Ҳ��ʹ������һ���ͻ������д����Ϣ��
        ��ȴ��������ɶ�ȡ���������Ӧ��ͨ���� ���� ����ǰָ�� stream �ؼ�����ָ��һ���ͻ��˵���������
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RecordRoute_Point(self, request_iterator, context):
        """��¼�õ�
        һ�� �ͻ�����ʽ RPC �� �ͻ���д��һ����Ϣ���в����䷢�͵���������ͬ��Ҳ��ʹ������һ���ͻ������д����Ϣ��
        ��ȴ��������ɶ�ȡ���������Ӧ��ͨ���� ���� ����ǰָ�� stream �ؼ�����ָ��һ���ͻ��˵���������
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListFeatures(self, request, context):
        """��ȡһ�������ڵĵ�
        һ�� ����������ʽ RPC �� �ͻ��˷������󵽷��������õ�һ����ȥ��ȡ���ص���Ϣ���С� �ͻ��˶�ȡ���ص�����
        ֱ������û���κ���Ϣ���������п��Կ�����ͨ���� ��Ӧ ����ǰ���� stream �ؼ��֣�����ָ��һ���������˵���������
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RouteChat(self, request_iterator, context):
        """·�ɽ���
        һ�� ˫����ʽ RPC ��˫��ʹ�ö�д��ȥ����һ����Ϣ���С�������������������˿ͻ��˺ͷ�����
        ����������ϲ����˳���д�����磬 ������������д����Ӧǰ�ȴ�������еĿͻ�����Ϣ�����߿��Խ��� �Ķ�ȡ��д����Ϣ��
        ���������д����ϡ�ÿ�����е���Ϣ˳��Ԥ���������ͨ�����������Ӧǰ�� stream �ؼ���ȥ�ƶ����������͡�
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Subscribe(self, request_iterator, context):
        # missing associated documentation comment in .proto file
        pass
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_GreeterServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'SayHello': grpc.unary_unary_rpc_method_handler(
            servicer.SayHello,
            request_deserializer=test__pb2.HelloRequest.FromString,
            response_serializer=test__pb2.HelloReply.SerializeToString,
            ),
        'RecordRoute': grpc.stream_unary_rpc_method_handler(
            servicer.RecordRoute,
            request_deserializer=test__pb2.HelloRequest.FromString,
            response_serializer=test__pb2.RouteSummary.SerializeToString,
            ),
        'RecordRoute_Point': grpc.stream_unary_rpc_method_handler(
            servicer.RecordRoute_Point,
            request_deserializer=test__pb2.Point.FromString,
            response_serializer=test__pb2.RouteSummary.SerializeToString,
            ),
        'ListFeatures': grpc.unary_stream_rpc_method_handler(
            servicer.ListFeatures,
            request_deserializer=test__pb2.Rectangle.FromString,
            response_serializer=test__pb2.Feature.SerializeToString,
            ),
        'RouteChat': grpc.stream_stream_rpc_method_handler(
            servicer.RouteChat,
            request_deserializer=test__pb2.RouteNote.FromString,
            response_serializer=test__pb2.RouteNote.SerializeToString,
            ),
        'Subscribe': grpc.stream_stream_rpc_method_handler(
            servicer.Subscribe,
            request_deserializer=test__pb2.Topic.FromString,
            response_serializer=test__pb2.Notification.SerializeToString,
            ),
        }
    generic_handler = grpc.method_handlers_generic_handler(
        'grpc.Greeter', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
