# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import comunication

import comunication.test_pb2 as test__pb2


class GreeterStub(object):
  """服务端接口类
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.SayHello = channel.unary_unary(
        '/grpc.Greeter/SayHello',
        request_serializer=test__pb2.HelloRequest.SerializeToString,
        response_deserializer=test__pb2.HelloReply.FromString,
        )
    self.RecordRoute = channel.stream_unary(
        '/grpc.Greeter/RecordRoute',
        request_serializer=test__pb2.HelloRequest.SerializeToString,
        response_deserializer=test__pb2.RouteSummary.FromString,
        )


class GreeterServicer(object):
  """服务端接口类
  """

  def SayHello(self, request, context):
    """服务端接口方法
    """
    context.set_code(comunication.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RecordRoute(self, request_iterator, context):
    """一个 客户端流式 RPC ， 客户端写入一个消息序列并将其发送到服务器，同样也是使用流。一旦客户端完成写入消息，
    它等待服务器完成读取返回它的响应。通过在 请求 类型前指定 stream 关键字来指定一个客户端的流方法。
    """
    context.set_code(comunication.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_GreeterServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'SayHello': comunication.unary_unary_rpc_method_handler(
          servicer.SayHello,
          request_deserializer=test__pb2.HelloRequest.FromString,
          response_serializer=test__pb2.HelloReply.SerializeToString,
      ),
      'RecordRoute': comunication.stream_unary_rpc_method_handler(
          servicer.RecordRoute,
          request_deserializer=test__pb2.HelloRequest.FromString,
          response_serializer=test__pb2.RouteSummary.SerializeToString,
      ),
  }
  generic_handler = comunication.method_handlers_generic_handler(
      'grpc.Greeter', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
